package PrimitiveTypes;

/*
Реализуйте метод, сливающий два отсортированных по неубыванию массива чисел в один отсортированный в том же порядке массив. Массивы могут быть любой длины, в том числе нулевой.
Предполагается, что вы реализуете алгоритм слияния, имеющий линейную сложность: он будет идти по двум исходным массивам и сразу формировать отсортированный результирующий массив.
Так, чтобы сортировка полученного массива при помощи Arrays.sort() уже не требовалась.
К сожалению, автоматически это не проверить, так что это остается на вашей совести :)
Воспользуйтесь предоставленным шаблоном. Декларацию класса, метод main и обработку ввода-вывода добавит проверяющая система.

Пример ввода: {0, 2, 2} и {1, 3}
Пример вывода: {0, 1, 2, 2, 3}

Требования:
Cигнатура метода должна быть: mergeArrays(int[] a1, int[] a2)
 */

import java.util.Arrays;

public class JavaCore_2_4_17 {
    public static void main(String[] args) {
        int[] a1 = {0, 2, 2};
        int[] a2 = {1, 3};
        mergeArrays(a1,a2);
    }

    public static int[] mergeArrays(int[] a1, int[] a2) {
        int[] a3 = new int[a1.length + a2.length];

        int i = 0;
        int j = 0;

        for (int k = 0; k < a3.length; k++) {
            if (i > a1.length -1) {
                int a = a2[j++];
                a3[k] = a ;
            }
            else if (j > a2.length - 1) {
                int a = a1[i++];
                a3[k] = a;
            }
            else if (a1[i] < a2[j]) {
                int a = a1[i++];
                a3[k] = a;
            }
            else {
                int b = a2[j++];
                a3[k] = b;
            }
        }
        System.out.println(Arrays.toString(a3));
        return a3;
    }
}